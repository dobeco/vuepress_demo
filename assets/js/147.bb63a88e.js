(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{444:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第3章-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第3章-基本概念"}},[t._v("#")]),t._v(" 第3章 基本概念")]),t._v(" "),a("h2",{attrs:{id:"_3-1-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-语法"}},[t._v("#")]),t._v(" 3.1 语法")]),t._v(" "),a("h3",{attrs:{id:"_3-1-1-标识符、注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-标识符、注释"}},[t._v("#")]),t._v(" 3.1.1 标识符、注释")]),t._v(" "),a("p",[t._v("所谓标识符，就是指变量、函数、属性的名字，或者函数的参数，采用驼峰格式，第一个字母小写，剩下的每个单词的首字母大写，例如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("firstSecond\nmyCar\ndoSomethingImportant\n")])])]),a("p",[t._v("ECMASCript使用C风格的注释，包括单行注释和块级注释")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 单行注释\n\n/*\n* 多行注释\n*/\n")])])]),a("h2",{attrs:{id:"_3-2-关键字和保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-关键字和保留字"}},[t._v("#")]),t._v(" 3.2 关键字和保留字")]),t._v(" "),a("p",[t._v("关键字是具有特定用途的，比如控制语句或其他特定操作，关键字、保留字、"),a("code",[t._v("true")]),t._v("、"),a("code",[t._v("false")]),t._v("和"),a("code",[t._v("null")]),t._v("不能用作标识符:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("关键字")]),t._v(" "),a("th",[t._v("关键字")]),t._v(" "),a("th",[t._v("关键字")]),t._v(" "),a("th",[t._v("关键字")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("break")]),t._v(" "),a("td",[t._v("do")]),t._v(" "),a("td",[t._v("instanceof")]),t._v(" "),a("td",[t._v("typeof")])]),t._v(" "),a("tr",[a("td",[t._v("case")]),t._v(" "),a("td",[t._v("else")]),t._v(" "),a("td",[t._v("new")]),t._v(" "),a("td",[t._v("var")])]),t._v(" "),a("tr",[a("td",[t._v("catch")]),t._v(" "),a("td",[t._v("finally")]),t._v(" "),a("td",[t._v("return")]),t._v(" "),a("td",[t._v("void")])]),t._v(" "),a("tr",[a("td",[t._v("continue")]),t._v(" "),a("td",[t._v("for")]),t._v(" "),a("td",[t._v("switch")]),t._v(" "),a("td",[t._v("whitle")])]),t._v(" "),a("tr",[a("td",[t._v("debugger")]),t._v(" "),a("td",[t._v("function")]),t._v(" "),a("td",[t._v("this")]),t._v(" "),a("td",[t._v("with")])]),t._v(" "),a("tr",[a("td",[t._v("default")]),t._v(" "),a("td",[t._v("if")]),t._v(" "),a("td",[t._v("throw")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("delete")]),t._v(" "),a("td",[t._v("in")]),t._v(" "),a("td",[t._v("try")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("保留字是将来可能有特定用途，但现在还没规定特定用途的。ES3定义的全部保留字:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("保留字")]),t._v(" "),a("th",[t._v("保留字")]),t._v(" "),a("th",[t._v("保留字")]),t._v(" "),a("th",[t._v("保留字")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("abstract")]),t._v(" "),a("td",[t._v("enum")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("short")])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("export")]),t._v(" "),a("td",[t._v("interfact")]),t._v(" "),a("td",[t._v("static")])]),t._v(" "),a("tr",[a("td",[t._v("byte")]),t._v(" "),a("td",[t._v("extends")]),t._v(" "),a("td",[t._v("long")]),t._v(" "),a("td",[t._v("super")])]),t._v(" "),a("tr",[a("td",[t._v("char")]),t._v(" "),a("td",[t._v("final")]),t._v(" "),a("td",[t._v("native")]),t._v(" "),a("td",[t._v("synchronized")])]),t._v(" "),a("tr",[a("td",[t._v("class")]),t._v(" "),a("td",[t._v("float")]),t._v(" "),a("td",[t._v("package")]),t._v(" "),a("td",[t._v("throws")])]),t._v(" "),a("tr",[a("td",[t._v("debugger")]),t._v(" "),a("td",[t._v("implements")]),t._v(" "),a("td",[t._v("protected")]),t._v(" "),a("td",[t._v("volatile")])]),t._v(" "),a("tr",[a("td",[t._v("double")]),t._v(" "),a("td",[t._v("import")]),t._v(" "),a("td",[t._v("public")]),t._v(" "),a("td",[t._v("let")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-3-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-变量"}},[t._v("#")]),t._v(" 3.3 变量")]),t._v(" "),a("p",[t._v("变量：可变的量，在编程语言中，变量其实就是一个名字，用来存储和代表不同值的东西。")]),t._v(" "),a("p",[t._v("用var操作符定义的碧昂量将成为定义该变量的作用域中的局部变量，如果在函数中使用var定义一个变量，那么这个变量在函数执行后就会被销毁。")]),t._v(" "),a("p",[t._v("声明变量有以下几种方式：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建函数也相当于在创建变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建类也相当于创建变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6的模块岛屿也可以创建变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Symbol创建唯一值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("总结：")]),t._v(" "),a("ul",[a("li",[t._v("用"),a("code",[t._v("var")]),t._v("声明的变量，可以重复声明，后声明的会覆盖前面的")]),t._v(" "),a("li",[t._v("用"),a("code",[t._v("let")]),t._v("声明的变量具有作用域，在同一作用域下不可重复声明变量，但是可以修改变量的值，例如"),a("code",[t._v("let a = 1;")]),t._v("，不能再次声明"),a("code",[t._v("a")]),t._v("，"),a("code",[t._v("let a = 2;")]),t._v("会报错，提示："),a("code",[t._v("Uncaught SyntaxError: Identifier 'a' has already been declared")])]),t._v(" "),a("li",[t._v("用"),a("code",[t._v("const")]),t._v("声明的变量为常量，不能修改该变量的值，但是像"),a("code",[t._v("Object")]),t._v("这样的复杂数据类型，在内存中存放的是一个指向该对象的指针，也就是说，用"),a("code",[t._v("const")]),t._v("声明的对象仍然可以修改该对象的值，但不可再次声明该对象")])]),t._v(" "),a("h2",{attrs:{id:"_3-4-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-数据类型"}},[t._v("#")]),t._v(" 3.4 数据类型")]),t._v(" "),a("p",[t._v("ESMAScript中数据分为两大类：一是基本数据类型:"),a("code",[t._v("Undefined")]),t._v("、"),a("code",[t._v("Null")]),t._v("、"),a("code",[t._v("Boolean")]),t._v("、"),a("code",[t._v("Number")]),t._v("、"),a("code",[t._v("String")]),t._v("、"),a("code",[t._v("Symbol")]),t._v("，二是复杂数据类型："),a("code",[t._v("Object")]),t._v(","),a("code",[t._v("Object")]),t._v("本质上是由一组无序的名子对组成的。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基本数据类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数字"),a("code",[t._v("Number")]),t._v(" (常规数字和 "),a("code",[t._v("NaN")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("字符串 "),a("code",[t._v("String")])])]),t._v(" "),a("li",[a("p",[t._v("布尔值 "),a("code",[t._v("Boolean")])])]),t._v(" "),a("li",[a("p",[t._v("空指针 "),a("code",[t._v("Null")])])]),t._v(" "),a("li",[a("p",[t._v("未定义 "),a("code",[t._v("Undefined")])])]),t._v(" "),a("li",[a("p",[t._v("唯一值（独一无二的值）"),a("code",[t._v("Symbol")])])])])]),t._v(" "),a("li",[a("p",[t._v("引用数据类型 "),a("code",[t._v("Object")]),t._v("对象类型")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("{}")]),t._v(" 普通对象")]),t._v(" "),a("li",[a("code",[t._v("[]")]),t._v(" 数组对象")]),t._v(" "),a("li",[a("code",[t._v("RegExp")]),t._v(" 正则对象")]),t._v(" "),a("li",[a("code",[t._v("Function")]),t._v(" 函数数据类型")]),t._v(" "),a("li",[a("code",[t._v("Math")]),t._v(" 数学函数对象")]),t._v(" "),a("li",[a("code",[t._v("Date")]),t._v(" 日期对象")])])])]),t._v(" "),a("p",[t._v("数据类型应用场景：")]),t._v(" "),a("p",[t._v("当我们通过"),a("code",[t._v("Ajax")]),t._v("请求拿到数据之前，先在本地初始化数据，一般都会先给一个默认的数据，请求数据后再把数据放入到我们定义好的数据结构里面，比如:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    isActive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    goods"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"_3-4-1-typeof操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-typeof操作符"}},[t._v("#")]),t._v(" 3.4.1 typeof操作符")]),t._v(" "),a("p",[a("code",[t._v("typeof")]),t._v("操作符用于检测给定变量的数据类型。"),a("code",[t._v("typeof")]),t._v("操作符可以检测的数据类型有：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("undefined")])]),t._v(" "),a("li",[a("code",[t._v("boolean")])]),t._v(" "),a("li",[a("code",[t._v("string")])]),t._v(" "),a("li",[a("code",[t._v("number")])]),t._v(" "),a("li",[a("code",[t._v("object")])]),t._v(" "),a("li",[a("code",[t._v("function")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some string'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "string"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n\n")])])]),a("p",[t._v("在上面的例子中调用 "),a("code",[t._v("typeof null")]),t._v("会返回"),a("code",[t._v('"object"')]),t._v(",因为特殊值"),a("code",[t._v("null")]),t._v("被认为是一个空的对象引用。用"),a("code",[t._v("typeof")]),t._v("检测一个变量是否是数组并不准确，会返回"),a("code",[t._v('"object"')]),t._v("，使用Object.prototype.toString()检测数据类型更加准确")]),t._v(" "),a("h3",{attrs:{id:"_3-4-2-undefined类型和null类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-undefined类型和null类型"}},[t._v("#")]),t._v(" 3.4.2 Undefined类型和Null类型")]),t._v(" "),a("p",[t._v("undefined类型只有一个值,即特殊的undefined，一个变量声明了但未赋值，默认是undefined")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[a("code",[t._v("undefined")]),t._v("和"),a("code",[t._v("null")]),t._v("区别：")]),t._v(" "),a("p",[a("code",[t._v("null")]),t._v("和"),a("code",[t._v("undefined")]),t._v("都代表的是没有。\n"),a("code",[t._v("null")]),t._v("是意料之中：一般都是开始不知道值，我们手动先设置为"),a("code",[t._v("null")]),t._v("，后期再给予赋值操作，例如，"),a("code",[t._v("let num = null")]),t._v(",一般最好用"),a("code",[t._v("null")]),t._v("作为初始的空值，因为"),a("code",[t._v("0")]),t._v("值不是空值，它在栈内存中有自己的存储空间（占了位置）\n"),a("code",[t._v("undefined")]),t._v("是意料之外：不是我们能决定的，创建一个变量没有赋值，默认是"),a("code",[t._v("undefined")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-4-3-boolean类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-3-boolean类型"}},[t._v("#")]),t._v(" 3.4.3 Boolean类型")]),t._v(" "),a("blockquote",[a("p",[t._v("只有两个字面值；true和false，这两个值与数字值不是一回事，因此true不一定等于1，而false也不一定等于0。")])]),t._v(" "),a("p",[t._v("只有"),a("code",[t._v("0")]),t._v("、"),a("code",[t._v("NaN")]),t._v("、"),a("code",[t._v("''")]),t._v("、"),a("code",[t._v("null")]),t._v("、"),a("code",[t._v("undefined")]),t._v("五个值转换为"),a("code",[t._v("false")]),t._v("，其余都转换为"),a("code",[t._v("true")]),t._v("（而且没有任何的特殊情况）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("转换为true的值")]),t._v(" "),a("th",[t._v("转换为false的值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("true")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("任何非空字符串")]),t._v(" "),a("td",[t._v('""空字符串')])]),t._v(" "),a("tr",[a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("任何非零数字值（包括无穷大）")]),t._v(" "),a("td",[t._v("0 和 NaN")])]),t._v(" "),a("tr",[a("td",[t._v("Object")]),t._v(" "),a("td",[t._v("任何对象")]),t._v(" "),a("td",[t._v("null")])]),t._v(" "),a("tr",[a("td",[t._v("Undefined")]),t._v(" "),a("td",[t._v("不适用")]),t._v(" "),a("td",[t._v("undefined")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello Wolrd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true (里面有空格)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n")])])]),a("p",[t._v("把其他类型转换为布尔类型有三种方式：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Boolean()")])]),t._v(" "),a("li",[a("code",[t._v("!")]),t._v("或"),a("code",[t._v("!!")]),t._v(" 取反：先转为布尔，然后取反")]),t._v(" "),a("li",[t._v("条件判断")])]),t._v(" "),a("h3",{attrs:{id:"_3-4-4-number类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-4-number类型"}},[t._v("#")]),t._v(" 3.4.4 Number类型")]),t._v(" "),a("p",[t._v("Number类型使用"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/IEEE_754",target:"_blank",rel:"noopener noreferrer"}},[t._v("IEEE754"),a("OutboundLink")],1),t._v("格式来表示整数和浮点值，这也是"),a("code",[t._v("0.2 + 0.3")]),t._v("不等于"),a("code",[t._v("0.5")]),t._v("的原因,")]),t._v(" "),a("p",[t._v("最基本的数值类型字面量格式是十进制整数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var a = 10;\n")])])]),a("h4",{attrs:{id:"_1-浮点数值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-浮点数值"}},[t._v("#")]),t._v(" 1. 浮点数值")]),t._v(" "),a("p",[t._v("整理中。。。")]),t._v(" "),a("h4",{attrs:{id:"_2-nan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-nan"}},[t._v("#")]),t._v(" 2. NaN")]),t._v(" "),a("p",[a("code",[t._v("Not a Number")]),t._v("：不是一个数，但它属于数值类型")]),t._v(" "),a("p",[t._v("NaN的特点")]),t._v(" "),a("ul",[a("li",[t._v("NaN和任何值进行操作都会返回NaN")]),t._v(" "),a("li",[t._v("NaN与任何值都不相等，包括NaN本身")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("console.log(NaN == NaN)\n")])])]),a("h4",{attrs:{id:"_3-isnan函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-isnan函数"}},[t._v("#")]),t._v(" 3. isNaN函数")]),t._v(" "),a("p",[t._v("用于检测一个变量不是数值（"),a("code",[t._v("Number")]),t._v("）类型。"),a("code",[t._v("isNaN()")]),t._v("接收一个参数，这个参数可以是任何类型。这个函数会尝试把传入的参数转换为数值，某些不是数值的值会直接转换成数值，例如字符串"),a("code",[t._v('"10"')]),t._v("或"),a("code",[t._v("Boolean")]),t._v("值,不能转换为数值的值返回"),a("code",[t._v("true")]),t._v("，能转换的返回"),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false (true会被转换成1)")]),t._v("\n")])])]),a("p",[t._v("总结：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("isNaN")]),t._v("意思是："),a("code",[t._v("是不是非数值")]),t._v("，是的话返回"),a("code",[t._v("true")]),t._v("，所有能被该函数转换能"),a("code",[t._v("Number")]),t._v("类型的值，都返回"),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("li",[t._v("在使用isNaN进行检测的时候，首先会验证检测的值是否为数字类型，如果不是，先基于Number()这个方法，把值转换成数字类型，然后再检测。")]),t._v(" "),a("li",[t._v("空字符串、空数组、布尔值、"),a("code",[t._v("null")]),t._v("会转成数值，所以"),a("code",[t._v("isNaN")]),t._v("函数返回"),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("li",[t._v("空对象、函数、"),a("code",[t._v("undefined")]),t._v("不能转换成数值，返回"),a("code",[t._v("true")]),t._v("。")])]),t._v(" "),a("h4",{attrs:{id:"_4-数值转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-数值转换"}},[t._v("#")]),t._v(" 4. 数值转换")]),t._v(" "),a("p",[t._v("把非数值值转换为数值：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Number()")])]),t._v(" "),a("li",[a("code",[t._v("parseInt()")]),t._v(" 取整")]),t._v(" "),a("li",[a("code",[t._v("parseFloat()")]),t._v(" 浮点数")])]),t._v(" "),a("p",[t._v("`Number()转换规则")]),t._v(" "),a("ul",[a("li",[t._v("如果是布尔值，"),a("code",[t._v("true")]),t._v("和"),a("code",[t._v("false")]),t._v("会被转换为"),a("code",[t._v("1")]),t._v("和"),a("code",[t._v("0")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果是数字，只是简单的传入和返回。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果是"),a("code",[t._v("null")]),t._v("值，返回"),a("code",[t._v("0")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("如果是"),a("code",[t._v("undefined")]),t._v("，返回"),a("code",[t._v("NaN")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("如果是字符串：\n"),a("ul",[a("li",[t._v("字符串中只包含数字（包括前面带正/负号的情况），则将其转换为十进制数值,数字前面有"),a("code",[t._v("0")]),t._v("的会被忽略(不管前面有几个"),a("code",[t._v("0")]),t._v("，全部忽略)，例如"),a("code",[t._v('"010"')]),t._v("会转换成"),a("code",[t._v("10")]),t._v("。")]),t._v(" "),a("li",[t._v('字符串中包含有效的浮点格式，如"1.1"，则将其转换为对应的浮点数值。')]),t._v(" "),a("li",[t._v("字符串中包含有效的十六进制格式（一般用数字"),a("code",[t._v("0")]),t._v("到"),a("code",[t._v("9")]),t._v("和字母"),a("code",[t._v("A")]),t._v("到"),a("code",[t._v("F")]),t._v("（或"),a("code",[t._v("a~f")]),t._v("）表示，其中"),a("code",[t._v(":A~F")]),t._v("表示"),a("code",[t._v("10~15")]),t._v("，这些称作十六进制数字），如"),a("code",[t._v('"0xf",')]),t._v("将其转换成相同大小的十进制整数值。")]),t._v(" "),a("li",[t._v("字符串为空，转换成"),a("code",[t._v("0")]),t._v("。")]),t._v(" "),a("li",[t._v("字符串中包含除了以上格式之外的字符，则转换为NaN，如字符串中既有数字又有字母的情况。")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 规则一")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"010"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10 (前导的0会被忽略)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-10"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -10")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 规则2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0000.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0.1 (前导的0会被忽略)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 规则3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 规则4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 规则5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Wolrd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0ff6600"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ff6600"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a10.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" goodsList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pop'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果数组或对象，返回"),a("code",[t._v("NaN")]),t._v("（估计没有人会这么傻，用"),a("code",[t._v("Number()")]),t._v("函数去转换吧...）。")])]),t._v(" "),a("h4",{attrs:{id:"parseint-string-radix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parseint-string-radix"}},[t._v("#")]),t._v(" parseInt(string,radix)")]),t._v(" "),a("blockquote",[a("p",[t._v("将一个字符串转换成x进制的整数。")])]),t._v(" "),a("p",[t._v("传入的第一个参数为字符串，如果参数不是字符串，则将其转换为字符串(使用  "),a("code",[t._v("ToString")]),t._v(" 抽象操作)。字符串开头的空白符将会被忽略。")]),t._v(" "),a("p",[t._v("第二个参数为整数，表示按照"),a("code",[t._v("xx")]),t._v("进制转换，如传入参数"),a("code",[t._v("10")]),t._v("表示按十进制规则转换，")]),t._v(" "),a("p",[t._v("从左到右依次查找有效数字字符，直到遇到非有效数字字符，停止查找（不管后面是否好友数字），把找到的当做数字返回。")]),t._v(" "),a("p",[t._v("如果字符串中以"),a("code",[t._v("0x")]),t._v("开头且后跟数字字符，就会将其当做一个十六进制整数。")]),t._v(" "),a("p",[t._v("如果字符串以"),a("code",[t._v('"0"')]),t._v("开头且后跟数字字符，则会被当做一个八进制数来解析。")]),t._v(" "),a("blockquote",[a("p",[t._v("如果不传第二个参数，会按照八进制解析。在大多数情况下，我们要解析的都是十进制数值，因此始终将10作为第二个参数是非常必要的。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12.5px"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xA"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10 (16进制)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15 (16进制)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"070"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 70")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"70"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 70")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"parsefloat-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsefloat-string"}},[t._v("#")]),t._v(" parseFloat(string)")]),t._v(" "),a("blockquote",[a("p",[t._v("解析一个参数（必要时先转换为字符串）并返回一个浮点数。默认解析十进制值。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("circumference")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("r")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("circumference")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.567")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expected output: 28.695307297889173")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("circumference")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4.567abcdefgh'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expected output: 28.695307297889173")]),t._v("\n\n")])])]),a("ul",[a("li",[a("p",[t._v("从左到右依次解析字符，一直解析到字符串末尾，遇到非数字字符会或遇到第二个浮点数（在这之前的字符串都会被解析）会使解析停止,如"),a("code",[t._v('"3.14"')]),t._v("解析成"),a("code",[t._v("3.14")]),t._v("，"),a("code",[t._v('"3.14.1234"')]),t._v("解析成"),a("code",[t._v("3.14")])])]),t._v(" "),a("li",[a("p",[t._v("忽略参数首尾空白符")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.14"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.14")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-3.14"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-3.14")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+3.14"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.14")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0003.14"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.14")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 3.14 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.14")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.14abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.14")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.14.5678"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.14")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc3.14"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n\n\n")])])]),a("p",[t._v("总结：")]),t._v(" "),a("p",[a("strong",[t._v("为什么"),a("code",[t._v("Number")]),t._v("和"),a("code",[t._v("parseInt/parseFloat")]),t._v("计算结果不一样呢？")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Number")]),t._v("转换规则是浏览器底层渲染规则，是浏览器的一个非常重要的方法，"),a("code",[t._v("parseInt/parseFloat")]),t._v("是一个单独方法的规则，就是用来处理字符串的。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Number")]),t._v("走的是整个"),a("code",[t._v("V8")]),t._v("引擎最底层的机制，遇到其他类型，底层机制会告诉我们哪个类型跟哪个类型应该怎么转换，这是底层机制已经规定好的，比如遇到布尔值，"),a("code",[t._v("true")]),t._v("转为"),a("code",[t._v("1")]),t._v("，"),a("code",[t._v("false")]),t._v("转为"),a("code",[t._v("0")]),t._v(" "),a("code",[t._v("parseInt")]),t._v("和"),a("code",[t._v("parseFloat")]),t._v("是额外提供的方法，就是浏览器提供的方法，它们的源码处理机制很简单，会先把传入的参数转换为字符串，然后在从左到右查找数字有效字符。")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a => 14")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-4-5-string类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-5-string类型"}},[t._v("#")]),t._v(" 3.4.5 String类型")]),t._v(" "),a("blockquote",[a("p",[t._v("所有用单引号、双引号、反引号包起来的都是字符串。")])]),t._v(" "),a("h4",{attrs:{id:"把其他类型值转换为字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把其他类型值转换为字符串"}},[t._v("#")]),t._v(" 把其他类型值转换为字符串")]),t._v(" "),a("ul",[a("li",[t._v("[val].toString()")]),t._v(" "),a("li",[t._v("字符串拼接")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ageAsString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "11"')]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 11undefinedHellonull10false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),t._v("\n")])])]),a("p",[a("strong",[t._v("案例解析：")])]),t._v(" "),a("ul",[a("li",[t._v("第一步，"),a("code",[t._v("10 + null => 10")]),t._v("  null转换成数值为0,  10 + 0 = 10。")]),t._v(" "),a("li",[t._v("第二步，"),a("code",[t._v("10 + true => 11")]),t._v(" true转为为数值为1，10 + 1 = 11")]),t._v(" "),a("li",[t._v("第三步, "),a("code",[t._v('11 + [] => "11"')]),t._v(' []转换为字符串为空，数值和遇到字符串+号变为连接符11 + "" = "11"')]),t._v(" "),a("li",[t._v("第四步， "),a("code",[t._v('"11" + undefined')]),t._v(' => "11undefined" 字符串后使用+号，当做连接符，后面的也一样')]),t._v(" "),a("li",[t._v("所有最终结果为 11undefinedHellonull10false")])]),t._v(" "),a("h3",{attrs:{id:"_3-4-6-object类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-6-object类型"}},[t._v("#")]),t._v(" 3.4.6 Object类型")]),t._v(" "),a("p",[t._v("ECMAScript中的对象其实就是一组数据和功能的集合。对象可以通过执行new操作符狗跟需要创建的对象类型名称来创建。对象实例拥有属性property和方法method")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明方式1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明方式2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("每个Object实例都拥有下列属性和方法：")]),t._v(" "),a("ul",[a("li",[t._v("constructor：保存用于创建当前对象的函数。")]),t._v(" "),a("li",[t._v("hasOwnProperty(propertyName)：用于检查给定属性在当前对象实例中是否存在。")]),t._v(" "),a("li",[t._v("isPortotypeOf(object)：传入对象是否是另一个对象的原型。")]),t._v(" "),a("li",[t._v("propertyIsEnumberable(propertyName)：用于检查给定的属性是否能够使用for-in语句来枚举。")]),t._v(" "),a("li",[t._v("toLocaleString()：返回对象的字符串表示。该字符串与执行环境的地区对应。")]),t._v(" "),a("li",[t._v("toString()：返回对象的字符串表示。")]),t._v(" "),a("li",[t._v("valueOf()：返回对象的字符串、数值或者布尔值表示。通常与toString()方法的返回值相同。")])]),t._v(" "),a("h2",{attrs:{id:"_3-5-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-操作符"}},[t._v("#")]),t._v(" 3.5 操作符")]),t._v(" "),a("h3",{attrs:{id:"_3-5-1一元操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1一元操作符"}},[t._v("#")]),t._v(" 3.5.1一元操作符")]),t._v(" "),a("h4",{attrs:{id:"_1-递增和递减操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-递增和递减操作符"}},[t._v("#")]),t._v(" 1. 递增和递减操作符")]),t._v(" "),a("h4",{attrs:{id:"_2-一元加和减操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-一元加和减操作符"}},[t._v("#")]),t._v(" 2. 一元加和减操作符")]),t._v(" "),a("h3",{attrs:{id:"_3-5-2-位操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-位操作符"}},[t._v("#")]),t._v(" 3.5.2 位操作符")]),t._v(" "),a("h3",{attrs:{id:"_3-5-3-布尔操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-3-布尔操作符"}},[t._v("#")]),t._v(" 3.5.3 布尔操作符")]),t._v(" "),a("h4",{attrs:{id:"_1-逻辑非-！"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-逻辑非-！"}},[t._v("#")]),t._v(" 1.逻辑非 ！")]),t._v(" "),a("h4",{attrs:{id:"_2-逻辑与"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-逻辑与"}},[t._v("#")]),t._v(" 2. 逻辑与 &&")]),t._v(" "),a("p",[t._v("逻辑与操作，有两个操作数（条件）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("第一个操作数")]),t._v(" "),a("th",[t._v("第二个操作数")]),t._v(" "),a("th",[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("true")]),t._v(" "),a("td",[t._v("true")]),t._v(" "),a("td",[t._v("true")])]),t._v(" "),a("tr",[a("td",[t._v("true")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("fasle")]),t._v(" "),a("td",[t._v("true")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("false")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("false")])])])]),t._v(" "),a("h4",{attrs:{id:"_3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3"}},[t._v("#")]),t._v(" 3.")]),t._v(" "),a("ul",[a("li")]),t._v(" "),a("h2",{attrs:{id:"_3-6-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-语句"}},[t._v("#")]),t._v(" 3.6 语句")]),t._v(" "),a("h2",{attrs:{id:"_3-7-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-函数"}},[t._v("#")]),t._v(" 3.7 函数")]),t._v(" "),a("h2",{attrs:{id:"_3-8-小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-小结"}},[t._v("#")]),t._v(" 3.8 小结")]),t._v(" "),a("p",[t._v("JavaScript的核心语言特性在ECMA-262中以名为ECMAScript的伪语言的形式来定义的。ECMAScript中包含了所有基本的语法、操作符、数据类型以及完成基本的计算任务说必须的对象，但没有对取得输入和产生输出的机制做出规定。理解ECMAScript以及其复杂的各种细节，是理解其在Web浏览器中的实现——JavaScript的关键。下面总结了ECMAScript中基本的要素。")]),t._v(" "),a("ul",[a("li",[t._v("ECMAScript中的基恩数据类型包括Undefined、Null、String、Number、Boolean和Symbol。")]),t._v(" "),a("li",[t._v("与其他语言不通，ECMAScript没有整数和浮点数值分别定义不通的数据类型，Number类型可以用于表示所有数值。")]),t._v(" "),a("li",[t._v("ECMaScript中也有一种复杂的数据类型，即Object类型，该类型是这门语言中所有对象的基础类型。")]),t._v(" "),a("li",[t._v("严格模式为这门语言中容易出错的地方施加了限制。\nECMAScript提供了很多与C及其他类C语言中相同的基本操作符，包括算数操作符、布尔操作符、关系操作符、相等操作符及赋值操作符等。")]),t._v(" "),a("li",[t._v("ECMAScript从其他语言中借鉴了很多流程控制语句，例如if语句、for语句和switch语句等。")]),t._v(" "),a("li",[t._v("无须指定函数的返回值，因为任何ECMAScript函数都可以在任何时候返回值，实际上，未指定返回值的函数返回的是一个特殊的undefined值。")]),t._v(" "),a("li",[t._v("ECMAScript中也没有函数签名的概念，因为其函数参数是以一个包含零或多个值的数组的形式传递的。")]),t._v(" "),a("li",[t._v("可以向ECMAScript函数传递任意数量的参数，并且可以通过arguments对此昂来访问这些参数。")]),t._v(" "),a("li",[t._v("由于不存在函数签名的特性，ECMAScript函数不能重载。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);