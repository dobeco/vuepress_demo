(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{545:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"一、src目录下面新建一个vuex文件夹"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、src目录下面新建一个vuex文件夹"}},[t._v("#")]),t._v(" 一、src目录下面新建一个vuex文件夹")]),t._v(" "),s("h3",{attrs:{id:"二、vuex文件夹新建一个store-js文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、vuex文件夹新建一个store-js文件"}},[t._v("#")]),t._v(" 二、vuex文件夹新建一个store.js文件")]),t._v(" "),s("h3",{attrs:{id:"三、安装vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、安装vuex"}},[t._v("#")]),t._v(" 三、安装vuex")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install vuex --save\n")])])]),s("h3",{attrs:{id:"四、在刚才创建的store-js引入vue-引入vuex并use-vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、在刚才创建的store-js引入vue-引入vuex并use-vuex"}},[t._v("#")]),t._v(" 四、在刚才创建的store.js引入vue 引入vuex并use vuex")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import Vue form 'vue'\nimport Vuex form 'vuex'\nVue.use(Vuex)\n")])])]),s("h3",{attrs:{id:"五、定义数据-state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、定义数据-state"}},[t._v("#")]),t._v(" 五、定义数据 state")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/* state在vuex中用于存储数据*/\n\nvar state={\n    count=1,\n}\n\n\n")])])]),s("h3",{attrs:{id:"六、定义方法-mutations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、定义方法-mutations"}},[t._v("#")]),t._v(" 六、定义方法 mutations")]),t._v(" "),s("p",[t._v("mutations 里面放的是方法，方法主要用于改变state里面的数据")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var mutations ={\n    inCount(){\n        ++state.count;\n    }\n}\n")])])]),s("h3",{attrs:{id:"七、暴露实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、暴露实例"}},[t._v("#")]),t._v(" 七、暴露实例")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const store =new Vuex.Store({\n    state,\n    mutations\n})\nexport default store;\n\n\n")])])]),s("h3",{attrs:{id:"八、组件里面使用vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、组件里面使用vuex"}},[t._v("#")]),t._v(" 八、组件里面使用vuex")]),t._v(" "),s("ol",[s("li",[t._v("引入store")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import store form '../vuex/store.js'\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("注册")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("export defalut {\n    data (){\n        return {\n            msg:'eeee'\n        }\n    },\n    store,\n    methods:{\n        inCount(){\n            //改变 vuex store里面的数据\n            this.$store.commint('inCount'); //触发state里面的数据\n        }\n    }\n}\n\n")])])]),s("p",[t._v("3.获取state里面的数据")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("this.$store.state.数据\n\n")])])]),s("p",[t._v("4.触发mutations 改变state里面的数据")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("this.$store.state.commit('inCount');\n\n")])])]),s("h3",{attrs:{id:"getters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getters"}},[t._v("#")]),t._v(" getters")]),t._v(" "),s("p",[t._v("类似计算属性。改变state里面的count数据的时候会触发getters里面的方法，获取新的值")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("getters:{\n    doneTodoCount:(state,getters) =>{\n        return getters.doneTodos.length\n    }\n}\n\n\n")])])]),s("h3",{attrs:{id:"store-js配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#store-js配置"}},[t._v("#")]),t._v(" store.js配置")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex);\n\n\n/*1.state在vuex中用于存储数据*/\nvar state={\n\n    count:1,\n    list:[]\n}\n\n/*2.mutations里面放的是方法，方法主要用于改变state里面的数据\n*/\nvar mutations={\n\n    incCount(){\n\n        ++state.count;\n    },\n    addList(state,data){\n\n        state.list = data;\n    }\n}\n\n/*3、优点类似计算属性 ，  改变state里面的count数据的时候会触发 getters里面的方法 获取新的值 (基本用不到)*/\n\n\nvar getters= {\n   \n    computedCount: (state) => {\n        return state.count*2\n    }\n}\n\n\n\n\n4. action\n\nAction 类似于 mutation，不同在于：\n\nAction 提交的是 mutation，而不是直接变更状态。\nAction 可以包含任意异步操作。\nactions不能直接修改全局变量，需要调用commit方法来触发mutation中的方法\n*/\n\n\nvar actions= {\n    incMutationsCount(context) {    /*因此你可以调用 context.commit 提交一个 mutation*/\n      \n      \n        context.commit('incCount');    /*执行 mutations 里面的incCount方法 改变state里面的数据*/\n\n\n    }\n}\n\n\n\n//vuex  实例化 Vuex.store   注意暴露\nconst store = new Vuex.Store({\n    state,\n    mutations,\n    getters,\n    actions\n})\n\n\nexport default store;\n")])])]),s("p",[t._v("vuex中的getters和组件内computed很相似。那什么时候用vuex呢？")]),t._v(" "),s("ul",[s("li",[t._v("如果数据还有其他组件复用")]),t._v(" "),s("li",[t._v("需要跨多级组件传递数据")]),t._v(" "),s("li",[t._v("持久化的数据(如登录后用户的信息)")]),t._v(" "),s("li",[t._v("跟当前业务组件强相关的数据，可以放在组件内")])])])}),[],!1,null,null,null);e.default=n.exports}}]);